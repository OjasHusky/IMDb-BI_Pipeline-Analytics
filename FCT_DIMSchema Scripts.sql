-- ER/Studio Data Architect SQL Code Generation
-- Project :      OjasMisra_iMDB.DM1
-- Date Created : Sunday, March 09, 2025 16:58:46
-- Target DBMS : Snowflake

-- TABLE: BRDG_PERSONPROFESSION 
CREATE OR REPLACE TABLE BRDG_PERSONPROFESSION(
    PERSON_SK        NUMBER(10, 0)    NOT NULL,
    PROFESSION_SK    NUMBER(10, 0)    NOT NULL,
    DI_JOB_ID        VARCHAR(100),
    DI_LOAD_DT       DATE,
    CONSTRAINT PERSONPROFESSION_PK PRIMARY KEY (PERSON_SK, PROFESSION_SK)
);

-- TABLE: BRDG_TITLEGENRE 
CREATE OR REPLACE TABLE BRDG_TITLEGENRE(
    MOVIES_SK     NUMBER(10, 0)    NOT NULL,
    GENRE_SK      NUMBER(10, 0)    NOT NULL,
    DI_JOB_ID     VARCHAR(100),
    DI_LOAD_DT    DATE,
    CONSTRAINT BRDG_TITLEGENRE_PK PRIMARY KEY (MOVIES_SK, GENRE_SK)
);

-- Create a sequence for the DIM_COUNTRY table
CREATE OR REPLACE SEQUENCE COUNTRY_SK_SEQ 
    START WITH 1 
    INCREMENT BY 1;

-- Create the DIM_COUNTRY table with a sequence-based auto-increment for COUNTRY_SK
CREATE OR REPLACE TABLE DIM_COUNTRY(
    COUNTRY_SK      NUMBER(10, 0)    NOT NULL DEFAULT COUNTRY_SK_SEQ.NEXTVAL,  -- Use the sequence for auto-increment
    COUNTRY_NAME    VARCHAR(50),
    COUNTRY_CODE    CHAR(8),
    DI_JOB_ID       VARCHAR(100),
    DI_LOAD_DT      DATE,
    CONSTRAINT COUNTRY_PK PRIMARY KEY (COUNTRY_SK)
);

-- Create a sequence for the DIM_LANGAUGE table
CREATE OR REPLACE SEQUENCE LANGUAGE_SK_SEQ 
    START WITH 1 
    INCREMENT BY 1;

-- Create the DIM_LANGAUGE table with a sequence-based auto-increment for LANGUAGE_SK
CREATE OR REPLACE TABLE DIM_LANGUAGE(
    LANGUAGE_SK      NUMBER(10, 0)    NOT NULL DEFAULT LANGUAGE_SK_SEQ.NEXTVAL,  -- Use the sequence for auto-increment
    LANGUAGE_NAME    VARCHAR(50),
    LANGUAGE_CODE    CHAR(8),
    DI_JOB_ID        VARCHAR(100),
    DI_LOAD_DT       DATE,
    CONSTRAINT LANGUAGE_PK PRIMARY KEY (LANGUAGE_SK)
);

-- TABLE: DIM_GENRE 
CREATE OR REPLACE TABLE DIM_GENRE(
    GENRE_SK      NUMBER(10, 0)    NOT NULL,
    GENRE_NAME    VARCHAR(50),
    DI_JOB_ID     VARCHAR(100),
    DI_LOAD_DT    DATE,
    CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_SK)
);


-- TABLE: DIM_MOVIES 
CREATE OR REPLACE TABLE DIM_MOVIES(
    MOVIES_SK              NUMBER(10, 0)    NOT NULL,
    MOV_TITLE_ID           VARCHAR(18),
    MOV_TITLE_NAME         VARCHAR(500),
    ORIGINAL_TITLE         VARCHAR(500),
    TITLE_TYPE             VARCHAR(50),
    RUNTIME_MINUTES        NUMBER(10, 0),
    IS_CURRENT             BOOLEAN,
    EFFECTIVE_STARTDATE    DATE,
    EFFECTIVE_ENDDATE      DATE,
    DI_JOB_ID              VARCHAR(100),
    DI_JOB_DT              DATE,
    CONSTRAINT TITLE_PK PRIMARY KEY (MOVIES_SK)
);


-- TABLE: DIM_PERSON 
CREATE OR REPLACE TABLE DIM_PERSON(
    PERSON_SK              NUMBER(10, 0)    NOT NULL,
    PERSON_ID              VARCHAR(25),
    PERSON_NAME            VARCHAR(1000),
    IS_CURRENT             BOOLEAN,
    EFFECTIVE_STARTDATE    DATE,
    EFFECTIVE_ENDDATE      DATE,
    DI_JOB_ID              VARCHAR(100),
    DI_JOB_DT              DATE,
    CONSTRAINT PERSON_PK PRIMARY KEY (PERSON_SK)
);


-- TABLE: DIM_PROFESSION 
CREATE OR REPLACE TABLE DIM_PROFESSION(
    PROFESSION_SK      NUMBER(10, 0)    NOT NULL,
    PROFESSION_NAME    VARCHAR(50),
    DI_JOB_ID          VARCHAR(100),
    DI_LOAD_DT         DATE,
    CONSTRAINT PROFESSION_PK PRIMARY KEY (PROFESSION_SK)
);

-- TABLE: DIM_ROLE 
CREATE OR REPLACE TABLE DIM_ROLE(
    ROLE_SK       NUMBER(10, 0)    NOT NULL,
    ROLE_NAME     VARCHAR(50),
    DI_JOB_ID     VARCHAR(100),
    DI_LOAD_DT    DATE,
    CONSTRAINT ROLE_PK PRIMARY KEY (ROLE_SK)
);

-- TABLE: DIM_SERIES 
CREATE OR REPLACE SEQUENCE SERIES_SK_SEQ 
    START WITH 1 
    INCREMENT BY 1;
CREATE OR REPLACE TABLE DIM_SERIES(
    SERIES_SK              INT    NOT NULL DEFAULT SERIES_SK_SEQ.NEXTVAL,
    SRS_TITLE_ID           VARCHAR(18),
    EPSD_TITLE_ID          VARCHAR(18),
    SRS_TITLE_NAME         VARCHAR(500),
    EPSD_TITLE_NAME        VARCHAR(500),
    SEASON_EPISODE         CHAR(8),
    IS_CURRENT             BOOLEAN,
    EFFECTIVE_STARTDATE    DATE,
    EFFECTIVE_ENDDATE      DATE,
    DI_JOB_ID              VARCHAR(100),
    DI_JOB_DT               DATE,
    CONSTRAINT TITLE_PK_1 PRIMARY KEY (SERIES_SK)
);

CREATE OR REPLACE SEQUENCE SERIES_SK_SEQ 
    START WITH 1 
    INCREMENT BY 1;


ALTER TABLE DIM_SERIES 
MODIFY COLUMN SRS_TITLE_ID VARCHAR(100);

ALTER TABLE DIM_SERIES 
MODIFY COLUMN EPSD_TITLE_NAME VARCHAR(500);


CREATE OR REPLACE SEQUENCE FCT_PERSON_SK_SEQ 
    START WITH 1 
    INCREMENT BY 1;

-- TABLE: FCT_PERSON_ROLE 
CREATE OR REPLACE TABLE FCT_PERSON_ROLE(
    TITLELABEL_SK    NUMBER(10, 0)    NOT NULL DEFAULT FCT_PERSON_SK_SEQ.NEXTVAL,
    MOVIES_SK        NUMBER(10, 0)    NOT NULL,
    PERSON_SK        NUMBER(10, 0)    NOT NULL,
    ROLE_SK          NUMBER(10, 0)    NOT NULL,
    SERIES_SK        INT    NOT NULL,
    CHARACTERS       VARCHAR(1000),
    ORDERING         NUMBER(5, 0),
    DI_JOB_ID        VARCHAR(100),
    DI_LOAD_DT       DATE,
    CONSTRAINT PERSON_ROLE_PK PRIMARY KEY (TITLELABEL_SK, MOVIES_SK, PERSON_SK, ROLE_SK, SERIES_SK)
);


SELECT * FROM FCT_PERSON_ROLE fpr 

CREATE OR REPLACE SEQUENCE FCT_TITLE_SK_SEQ 
    START WITH 1 
    INCREMENT BY 1;

-- TABLE: FCT_TITLE_DETAILS 
CREATE OR REPLACE TABLE FCT_TITLE_DETAILS(	
    TITLEDETAIL_SK    NUMBER(10, 0)    NOT NULL DEFAULT FCT_TITLE_SK_SEQ.NEXTVAL,
    MOVIES_SK         NUMBER(10, 0)    NOT NULL,
    LANGUAGE_SK       NUMBER(10, 0)    NOT NULL,
    COUNTRY_SK        NUMBER(10, 0)    NOT NULL,
    SERIES_SK         INT    NOT NULL,
    IS_ADULT          BOOLEAN,
    START_YEAR        NUMBER(10, 0),
    END_YEAR          NUMBER(10, 0),
    NUM_VOTES         NUMBER(10, 0),
    AVG_RATING        DECIMAL(3, 1),
    DI_JOB_ID         VARCHAR(100),
    DI_LOAD_DT        DATE,
    CONSTRAINT TITLE_DETAILS_PK PRIMARY KEY (TITLEDETAIL_SK, MOVIES_SK, LANGUAGE_SK, COUNTRY_SK, SERIES_SK)
);

-- Adding Foreign Key Constraints

-- TABLE: BRDG_PERSONPROFESSION
ALTER TABLE BRDG_PERSONPROFESSION ADD CONSTRAINT RefDIM_PERSON13 
    FOREIGN KEY (PERSON_SK)
    REFERENCES DIM_PERSON(PERSON_SK);

ALTER TABLE BRDG_PERSONPROFESSION ADD CONSTRAINT RefDIM_PROFESSION14 
    FOREIGN KEY (PROFESSION_SK)
    REFERENCES DIM_PROFESSION(PROFESSION_SK);

-- TABLE: BRDG_TITLEGENRE
ALTER TABLE BRDG_TITLEGENRE ADD CONSTRAINT RefDIM_MOVIES9 
    FOREIGN KEY (MOVIES_SK)
    REFERENCES DIM_MOVIES(MOVIES_SK);

ALTER TABLE BRDG_TITLEGENRE ADD CONSTRAINT RefDIM_GENRE10 
    FOREIGN KEY (GENRE_SK)
    REFERENCES DIM_GENRE(GENRE_SK);

-- TABLE: FCT_PERSON_ROLE
ALTER TABLE FCT_PERSON_ROLE ADD CONSTRAINT RefDIM_MOVIES8 
    FOREIGN KEY (MOVIES_SK)
    REFERENCES DIM_MOVIES(MOVIES_SK);

ALTER TABLE FCT_PERSON_ROLE ADD CONSTRAINT RefDIM_PERSON16 
    FOREIGN KEY (PERSON_SK)
    REFERENCES DIM_PERSON(PERSON_SK);

ALTER TABLE FCT_PERSON_ROLE ADD CONSTRAINT RefDIM_ROLE21 
    FOREIGN KEY (ROLE_SK)
    REFERENCES DIM_ROLE(ROLE_SK);

ALTER TABLE FCT_PERSON_ROLE ADD CONSTRAINT RefDIM_SERIES25 
    FOREIGN KEY (SERIES_SK)
    REFERENCES DIM_SERIES(SERIES_SK);

-- TABLE: FCT_TITLE_DETAILS
ALTER TABLE FCT_TITLE_DETAILS ADD CONSTRAINT RefDIM_MOVIES7 
    FOREIGN KEY (MOVIES_SK)
    REFERENCES DIM_MOVIES(MOVIES_SK);

ALTER TABLE FCT_TITLE_DETAILS ADD CONSTRAINT RefDIM_LANGAUGE22 
    FOREIGN KEY (LANGUAGE_SK)
    REFERENCES DIM_LANGUAGE(LANGUAGE_SK);

ALTER TABLE FCT_TITLE_DETAILS ADD CONSTRAINT RefDIM_COUNTRY23 
    FOREIGN KEY (COUNTRY_SK)
    REFERENCES DIM_COUNTRY(COUNTRY_SK);

ALTER TABLE FCT_TITLE_DETAILS ADD CONSTRAINT RefDIM_SERIES24 
    FOREIGN KEY (SERIES_SK)
    REFERENCES DIM_SERIES(SERIES_SK);


